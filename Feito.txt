Notas Importantes:

	Sempre que se dá push do github o projeto
		- php artisan migrate:fresh
		- php artisan db:seed
		- composer update 
		- npm install 
		
Feito:

Mount DB

	- php artisan migrate:fresh
	- php artisan db:seed
	
	DB_CONNECTION=mysql
	DB_HOST=127.0.0.1
	DB_PORT=3306
	DB_DATABASE=imagineshirt
	DB_USERNAME=root
	DB_PASSWORD=
	
Composer install

Instalar telescope

	composer require laravel/telescope --dev
	php artisan telescope:install
	php artisan migrate
	
	.env:
		TELESCOPE_ENABLED = TRUE

Instalar framework bootstrap

	composer require laravel/ui
	php artisan ui bootstrap --auth
	npm install
	
Instalar toolbar telescope

	composer require fruitcake/laravel-telescope-toolbar --dev
	php artisan vendor:publish --provider="Fruitcake\\TelescopeToolbar\\ToolbarServiceProvider"

	.env:
		APP_DEBUG=true
		TELESCOPE_TOOLBAR_ENABLED=true
		
Instalar jQuery para o vite funcionar

	npm install jquery --save-dev
	
	bootstrap.js:
		import 'jquery';
		
JPopper

npm install bootstrap@latest @popperjs/core --save-dev

	bootstrap.js:
		import '@popperjs/core';

##################################################################################################################################################

ALTERAR:

	. Para manter opção selecionado quando se filtra por categoria - usado fullUrl() e request query - perguntar stor outras formas
	. Como mudar linguagem bootstrap navigation bar "Showing ..."
	. Camisolas User apenas visivel para o user - FEITO (FALTA mostrar imagem)
	. T-Shirts mais vendidas = SELECT tshirt_image_id, SUM(qty) AS "Quantidade Vendida" FROM order_items GROUP BY tshirt_image_id ORDER BY SUM(qty) DESC;
	. Notificações quando order enviada/cancelada ...

##################################################################################################################################################
		
Template para home page

Criar index para página t-shirts - Modelo - Controlador

Modelo - Controlador: Preco
					  Categoria

Paginate TShirt Controller

AppServiceProvider alterar o boot para permitir o links do paginator

Obter categorias e preço na página t-shirts
	
Relações modelos - (aumentando consoante os modelos)

	. Categoria HasMany T-Shirts - Feito
	. 

Filtragem T-Shirts
	
	View
		. request()->fullUrlWithQuery(['categoria' => $categoria, 'pagina' => '1']) - reset automatico para 1ª pagina 
		. select - onchange="updateQuery()" => quando se clica nas opções é dado update à query no parametro ordenar
		. pesquisar - descrição e nome na mesma search bar

	Controlador

		. filtro para categorias e ordenação (default = data rec para antiga, nome asc ou desc e preço asc ou desc)
		. procura no nome ou descrição a string do pesquisar

	Notas:

		. p.e se na categoria bebida com preco_asc ao clicar no todas era redirecionado para a rota t-shirts quando apenas era necessario retirar a categoria usada (texcept('categoria'))

Filtragem T-Shirts Pagina Inicial

	. mais vendidos - fazer (falta modelos)
	. mais recentes
	. mais popuplas - random

Login & Registo

	- rota logout para aceitar metodo GET
	- redirect para pagina errado mudado: RouteServiceProvider: public const HOME = '/';
	- remover mensagem "email nao se encontra nos registos"
	- nao permitir login de quem ta bloqueado
	- alterar mensagens de erro

Registo

	- overwrite rota depois de registo automatico login para nao dar login
	- enviar email de verificação no registo : Auth::routes(['verify' => true]); class User extends Authenticatable implements MustVerifyEmail
	- NAO PERMITIR USER ACESSAR PAGINA UTILIZADOR SEM EMAIL VERIFICADO - FEITO
	- criar por default cliente (user_type = 'C') e tambem criar customer quando registado novo user

Após Login & Registo

	- mudar permissoes de view layout
	
Imagens de T-Shirts overlay

	